/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package GUI;

import DAO.DAO_TraCuuHD;
import Database.ConnectDatabase;
import Entity.ThongKeCa;
import TestTK.ModelPieChart;
import TestTK.PieChart;
import com.raven.chart.Chart1;
import com.raven.chart.ModelChart;

import javax.swing.*;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;
import java.awt.*;
import java.sql.Date;
import java.text.DecimalFormat;
import java.text.SimpleDateFormat;
import java.util.LinkedHashMap;
import java.util.List;
import java.util.Map;

/**
 *
 * @author viet6
 */
public class Frm_TKDTTheoCa extends JFrame {

    private final DAO_TraCuuHD dao_traCuuHD;
    private final DefaultTableModel tableModel;
    private Chart1 chart;
    private List<ThongKeCa> danhSachThongKeCot;


    /**
     * Creates new form Frm_TKDTTheoCa
     */
    public Frm_TKDTTheoCa() {
        initComponents();
           try {
            ConnectDatabase.getInstance().connect();    
        } catch (Exception e) {

        }

        dao_traCuuHD = new DAO_TraCuuHD();
        
        tableThongKe.setFont(new Font("Arial", Font.PLAIN, 14));
        tableThongKe.setRowHeight(35);  // Đặt chiều cao của các hàng (ví dụ: 35)
        tableThongKe.setSelectionBackground(new Color(255, 223, 186));  // Màu nền khi chọn hàng
                // Thay đổi màu của tiêu đề cột
        JTableHeader header = tableThongKe.getTableHeader();
                header.setDefaultRenderer(new DefaultTableCellRenderer() {
            @Override
            public Component getTableCellRendererComponent(JTable table, Object value,
                                                           boolean isSelected, boolean hasFocus,
                                                           int row, int column) {
                Component c = super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);
                c.setBackground(new Color(0, 131, 66)); // Màu nền tiêu đề cột
                c.setForeground(Color.white);          // Màu chữ tiêu đề cột
                c.setFont(new Font("Arial", Font.BOLD, 20)); // Font chữ tiêu đề
                ((JLabel) c).setHorizontalAlignment(SwingConstants.CENTER); // Căn giữa
                return c;
            }
        });
        Color colorTieuDeBang = new Color(0, 131, 66);
        header.setBackground(Color.BLUE); // Màu nền tiêu đề cột
        header.setForeground(Color.WHITE); // Màu chữ tiêu đề cột
        header.setFont(new Font("Arial", Font.BOLD, 20)); // Đặt font cho tiêu đề (cỡ 16)
        tableThongKe.setFont(new Font("Arial", Font.PLAIN, 18)); // Đặt font cho các dòng (cỡ 14)
        tableModel = (DefaultTableModel) tableThongKe.getModel();
        jSpinnerYear.setModel(new SpinnerNumberModel(2024, 1900, 2100, 1));
        JSpinner.NumberEditor editor = new JSpinner.NumberEditor(jSpinnerYear, "####");
        jSpinnerYear.setEditor(editor);
        jSpinnerYear.setValue(2024);
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new ButtonGroup();
        jPanelMenu = new JPanel();
        jPanelTKDTCa = new JPanel();
        lblThongKe = new JLabel();
        jPanel1 = new JPanel();
        jLabel2 = new JLabel();
        lblNBD = new JLabel();
        jDateChooserNKT = new com.toedter.calendar.JDateChooser();
        jDateChooserNBD = new com.toedter.calendar.JDateChooser();
        btnTimKiem = new JButton();
        jComboBoxTime = new JComboBox<>();
        jSpinnerYear = new JSpinner();
        jLabel9 = new JLabel();
        jradioKhoangTime = new JRadioButton();
        jRadioTime = new JRadioButton();
        jLabel1 = new JLabel();
        jLabel4 = new JLabel();
        jPanel2 = new JPanel();
        lblDoanhThu2 = new JLabel();
        lblDoanhThu3 = new JLabel();
        lblDoanhThu1 = new JLabel();
        lblTongTienCa2 = new JLabel();
        lblTongTienCa1 = new JLabel();
        lblTongTienCa3 = new JLabel();
        lblBieuDo = new JLabel();
        jPanelChart = new JPanel();
        BtnChartCot = new JButton();
        BtnChartTron = new JButton();
        jScrollPane1 = new JScrollPane();
        tableThongKe = new JTable();
        jPanel3 = new JPanel();
        lblCa1 = new JLabel();
        lblCa2 = new JLabel();
        lblCa3 = new JLabel();
        jPanel5 = new JPanel();
        jPanel6 = new JPanel();
        lblTimeHienThi = new JLabel();
        jLabel5 = new JLabel();

        setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);

        jPanelMenu.setBorder(BorderFactory.createLineBorder(new Color(0, 0, 0)));
        jPanelMenu.setPreferredSize(new Dimension(250, 2));

        GroupLayout jPanelMenuLayout = new GroupLayout(jPanelMenu);
        jPanelMenu.setLayout(jPanelMenuLayout);
        jPanelMenuLayout.setHorizontalGroup(
            jPanelMenuLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGap(0, 248, Short.MAX_VALUE)
        );
        jPanelMenuLayout.setVerticalGroup(
            jPanelMenuLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        jPanelTKDTCa.setBorder(BorderFactory.createLineBorder(new Color(0, 0, 0)));
        jPanelTKDTCa.setCursor(new Cursor(Cursor.DEFAULT_CURSOR));
        jPanelTKDTCa.setPreferredSize(new Dimension(1516, 926));

        lblThongKe.setFont(new Font("Segoe UI", 0, 36)); // NOI18N
        lblThongKe.setText("Thống kê doanh thu theo ca");

        jPanel1.setBackground(new Color(255, 255, 255));
        jPanel1.setBorder(BorderFactory.createLineBorder(new Color(0, 0, 0)));

        jLabel2.setFont(new Font("Segoe UI", 0, 18)); // NOI18N
        jLabel2.setText("Ngày kết thúc");

        lblNBD.setFont(new Font("Segoe UI", 0, 18)); // NOI18N
        lblNBD.setText("Ngày bắt đầu:");

        btnTimKiem.setBackground(new Color(0, 131, 66));
        btnTimKiem.setFont(new Font("Segoe UI", 1, 18)); // NOI18N
        btnTimKiem.setForeground(new Color(255, 255, 255));
        btnTimKiem.setIcon(new ImageIcon(getClass().getResource("/Anh_HeThong/findNV.png"))); // NOI18N
        btnTimKiem.setText("Thống kê");
        btnTimKiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTimKiemActionPerformed(evt);
            }
        });

        jComboBoxTime.setFont(new Font("Segoe UI", 0, 18)); // NOI18N
        jComboBoxTime.setModel(new DefaultComboBoxModel<>(new String[] { "Hôm qua", "Hôm nay", "Tháng 1", "Tháng 2", "Tháng 3", "Tháng 4", "Tháng 5", "Tháng 6", "Tháng 7", "Tháng 8 ", "Tháng 9", "Tháng 10", "Tháng 11", "Tháng 12" }));

        jLabel9.setFont(new Font("Segoe UI", 0, 18)); // NOI18N
        jLabel9.setText("Năm:");

        buttonGroup1.add(jradioKhoangTime);
        jradioKhoangTime.setFont(new Font("Segoe UI", 0, 18)); // NOI18N
        jradioKhoangTime.setSelected(true);
        jradioKhoangTime.setText("Thống kê theo khoảng thời gian:");

        buttonGroup1.add(jRadioTime);
        jRadioTime.setFont(new Font("Segoe UI", 0, 18)); // NOI18N
        jRadioTime.setText("Thống kê theo loại thời gian:");

        GroupLayout jPanel1Layout = new GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(70, 70, 70)
                .addGroup(jPanel1Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addComponent(jRadioTime, GroupLayout.PREFERRED_SIZE, 301, GroupLayout.PREFERRED_SIZE)
                    .addComponent(jradioKhoangTime))
                .addGap(37, 37, 37)
                .addGroup(jPanel1Layout.createParallelGroup(GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(lblNBD)
                        .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jDateChooserNBD, GroupLayout.PREFERRED_SIZE, 238, GroupLayout.PREFERRED_SIZE))
                    .addComponent(jComboBoxTime, GroupLayout.PREFERRED_SIZE, 361, GroupLayout.PREFERRED_SIZE))
                .addGap(36, 36, 36)
                .addGroup(jPanel1Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel9))
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addComponent(jSpinnerYear, GroupLayout.PREFERRED_SIZE, 80, GroupLayout.PREFERRED_SIZE)
                    .addComponent(jDateChooserNKT, GroupLayout.PREFERRED_SIZE, 217, GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED, 46, Short.MAX_VALUE)
                .addComponent(btnTimKiem, GroupLayout.PREFERRED_SIZE, 170, GroupLayout.PREFERRED_SIZE)
                .addGap(106, 106, 106))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                                    .addComponent(lblNBD)
                                    .addComponent(jradioKhoangTime)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(16, 16, 16)
                                .addComponent(jLabel2))
                            .addGroup(jPanel1Layout.createParallelGroup(GroupLayout.Alignment.LEADING, false)
                                .addComponent(jDateChooserNKT, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jDateChooserNBD, GroupLayout.PREFERRED_SIZE, 57, GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                            .addComponent(jComboBoxTime, GroupLayout.PREFERRED_SIZE, 59, GroupLayout.PREFERRED_SIZE)
                            .addComponent(jSpinnerYear, GroupLayout.PREFERRED_SIZE, 51, GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9))
                        .addContainerGap())
                    .addGroup(GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jRadioTime)
                        .addGap(28, 28, 28))))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addComponent(btnTimKiem, GroupLayout.PREFERRED_SIZE, 57, GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jLabel1.setFont(new Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setText("Lọc");

        jLabel4.setFont(new Font("Segoe UI", 1, 18)); // NOI18N
        jLabel4.setText("Kết quả");

        jPanel2.setBackground(new Color(255, 255, 255));

        lblDoanhThu2.setFont(new Font("Segoe UI", 0, 18)); // NOI18N
        lblDoanhThu2.setIcon(new ImageIcon(getClass().getResource("/Anh_HeThong/money.png"))); // NOI18N
        lblDoanhThu2.setText("Tổng doanh thu ca 2");

        lblDoanhThu3.setFont(new Font("Segoe UI", 0, 18)); // NOI18N
        lblDoanhThu3.setIcon(new ImageIcon(getClass().getResource("/Anh_HeThong/money.png"))); // NOI18N
        lblDoanhThu3.setText("Tổng doanh thu ca 3");

        lblDoanhThu1.setFont(new Font("Segoe UI", 0, 18)); // NOI18N
        lblDoanhThu1.setIcon(new ImageIcon(getClass().getResource("/Anh_HeThong/money.png"))); // NOI18N
        lblDoanhThu1.setText("Tổng doanh thu ca 1");

        lblTongTienCa2.setFont(new Font("Segoe UI", 1, 18)); // NOI18N
        lblTongTienCa2.setForeground(new Color(255, 0, 51));

        lblTongTienCa1.setFont(new Font("Segoe UI", 1, 18)); // NOI18N
        lblTongTienCa1.setForeground(new Color(255, 0, 51));

        lblTongTienCa3.setFont(new Font("Segoe UI", 1, 18)); // NOI18N
        lblTongTienCa3.setForeground(new Color(255, 0, 51));

        GroupLayout jPanel2Layout = new GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(104, 104, 104)
                .addComponent(lblDoanhThu1)
                .addGap(24, 24, 24)
                .addComponent(lblTongTienCa1, GroupLayout.PREFERRED_SIZE, 161, GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblDoanhThu2)
                .addGap(31, 31, 31)
                .addComponent(lblTongTienCa2, GroupLayout.PREFERRED_SIZE, 161, GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED, 75, Short.MAX_VALUE)
                .addComponent(lblDoanhThu3)
                .addGap(34, 34, 34)
                .addComponent(lblTongTienCa3, GroupLayout.PREFERRED_SIZE, 161, GroupLayout.PREFERRED_SIZE)
                .addGap(37, 37, 37))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(jPanel2Layout.createParallelGroup(GroupLayout.Alignment.TRAILING)
                    .addComponent(lblTongTienCa2, GroupLayout.PREFERRED_SIZE, 45, GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                        .addComponent(lblTongTienCa3, GroupLayout.PREFERRED_SIZE, 45, GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel2Layout.createParallelGroup(GroupLayout.Alignment.TRAILING)
                            .addComponent(lblTongTienCa1, GroupLayout.PREFERRED_SIZE, 45, GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel2Layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                                .addComponent(lblDoanhThu1)
                                .addComponent(lblDoanhThu2)
                                .addComponent(lblDoanhThu3)))))
                .addContainerGap(20, Short.MAX_VALUE))
        );

        lblBieuDo.setFont(new Font("Segoe UI", 1, 18)); // NOI18N
        lblBieuDo.setText("Biểu đồ");

        jPanelChart.setBackground(new Color(255, 255, 255));
        jPanelChart.setBorder(BorderFactory.createLineBorder(new Color(0, 0, 0)));
        jPanelChart.setPreferredSize(new Dimension(500, 300));

        GroupLayout jPanelChartLayout = new GroupLayout(jPanelChart);
        jPanelChart.setLayout(jPanelChartLayout);
        jPanelChartLayout.setHorizontalGroup(
            jPanelChartLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGap(0, 498, Short.MAX_VALUE)
        );
        jPanelChartLayout.setVerticalGroup(
            jPanelChartLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGap(0, 298, Short.MAX_VALUE)
        );

        BtnChartCot.setBackground(new Color(204, 255, 204));
        BtnChartCot.setFont(new Font("Segoe UI", 1, 18)); // NOI18N
        BtnChartCot.setForeground(new Color(255, 255, 255));
        BtnChartCot.setText("Cột");
        BtnChartCot.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnChartCotActionPerformed(evt);
            }
        });

        BtnChartTron.setBackground(new Color(0, 131, 66));
        BtnChartTron.setFont(new Font("Segoe UI", 1, 18)); // NOI18N
        BtnChartTron.setForeground(new Color(255, 255, 255));
        BtnChartTron.setText("Tròn");
        BtnChartTron.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnChartTronActionPerformed(evt);
            }
        });

        tableThongKe.setModel(new DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Ngày", "Ca", "Doanh thu", "Số số đơn", "Số vé bán"
            }
        ));
        jScrollPane1.setViewportView(tableThongKe);

        jPanel3.setBackground(new Color(255, 51, 51));
        jPanel3.setPreferredSize(new Dimension(35, 35));

        GroupLayout jPanel3Layout = new GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGap(0, 35, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGap(0, 35, Short.MAX_VALUE)
        );

        lblCa1.setFont(new Font("Segoe UI", 1, 18)); // NOI18N
        lblCa1.setText("Tổng doanh thu ca 2");

        lblCa2.setFont(new Font("Segoe UI", 1, 18)); // NOI18N
        lblCa2.setText("Tổng doanh thu ca 1");

        lblCa3.setFont(new Font("Segoe UI", 1, 18)); // NOI18N
        lblCa3.setText("Tổng doanh thu ca 3");

        jPanel5.setBackground(new Color(0, 0, 255));
        jPanel5.setPreferredSize(new Dimension(35, 35));

        GroupLayout jPanel5Layout = new GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGap(0, 35, Short.MAX_VALUE)
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGap(0, 35, Short.MAX_VALUE)
        );

        jPanel6.setBackground(new Color(51, 255, 51));
        jPanel6.setPreferredSize(new Dimension(35, 35));

        GroupLayout jPanel6Layout = new GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGap(0, 35, Short.MAX_VALUE)
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGap(0, 35, Short.MAX_VALUE)
        );

        lblTimeHienThi.setFont(new Font("Segoe UI", 1, 24)); // NOI18N
        lblTimeHienThi.setForeground(new Color(255, 51, 0));
        lblTimeHienThi.setText("Tháng 12");

        jLabel5.setFont(new Font("Segoe UI", 1, 24)); // NOI18N
        jLabel5.setText("Thống kê doanh thu ");

        GroupLayout jPanelTKDTCaLayout = new GroupLayout(jPanelTKDTCa);
        jPanelTKDTCa.setLayout(jPanelTKDTCaLayout);
        jPanelTKDTCaLayout.setHorizontalGroup(
            jPanelTKDTCaLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(jPanelTKDTCaLayout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addComponent(jLabel1)
                .addGap(0, 1454, Short.MAX_VALUE))
            .addGroup(jPanelTKDTCaLayout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(jPanelTKDTCaLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelTKDTCaLayout.createSequentialGroup()
                        .addGroup(jPanelTKDTCaLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelTKDTCaLayout.createSequentialGroup()
                                .addGap(15, 15, 15)
                                .addComponent(lblThongKe))
                            .addGroup(jPanelTKDTCaLayout.createSequentialGroup()
                                .addGap(11, 11, 11)
                                .addComponent(lblBieuDo)
                                .addGap(18, 18, 18)
                                .addGroup(jPanelTKDTCaLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane1, GroupLayout.PREFERRED_SIZE, 1237, GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanelTKDTCaLayout.createSequentialGroup()
                                        .addComponent(BtnChartCot, GroupLayout.PREFERRED_SIZE, 105, GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(BtnChartTron, GroupLayout.PREFERRED_SIZE, 105, GroupLayout.PREFERRED_SIZE)
                                        .addGap(51, 51, 51)
                                        .addComponent(jPanelChart, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                                        .addGap(67, 67, 67)
                                        .addGroup(jPanelTKDTCaLayout.createParallelGroup(GroupLayout.Alignment.TRAILING)
                                            .addGroup(jPanelTKDTCaLayout.createSequentialGroup()
                                                .addGroup(jPanelTKDTCaLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                                    .addComponent(jPanel5, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(jPanel6, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(jPanel3, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                                                .addGap(36, 36, 36)
                                                .addGroup(jPanelTKDTCaLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                                    .addComponent(lblCa2, GroupLayout.PREFERRED_SIZE, 195, GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(lblCa1, GroupLayout.PREFERRED_SIZE, 195, GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(lblCa3, GroupLayout.PREFERRED_SIZE, 195, GroupLayout.PREFERRED_SIZE)))
                                            .addGroup(GroupLayout.Alignment.LEADING, jPanelTKDTCaLayout.createParallelGroup(GroupLayout.Alignment.TRAILING, false)
                                                .addComponent(lblTimeHienThi, GroupLayout.Alignment.LEADING, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(jLabel5, GroupLayout.Alignment.LEADING, GroupLayout.DEFAULT_SIZE, 256, Short.MAX_VALUE)))))))
                        .addContainerGap(156, Short.MAX_VALUE))
                    .addGroup(jPanelTKDTCaLayout.createSequentialGroup()
                        .addGroup(jPanelTKDTCaLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel1, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4)
                            .addComponent(jPanel2, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        jPanelTKDTCaLayout.setVerticalGroup(
            jPanelTKDTCaLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(jPanelTKDTCaLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblThongKe)
                .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel1)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4)
                .addGap(18, 18, 18)
                .addComponent(jPanel2, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanelTKDTCaLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelTKDTCaLayout.createSequentialGroup()
                        .addGroup(jPanelTKDTCaLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelTKDTCaLayout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                                .addComponent(BtnChartCot, GroupLayout.PREFERRED_SIZE, 44, GroupLayout.PREFERRED_SIZE)
                                .addComponent(BtnChartTron, GroupLayout.PREFERRED_SIZE, 44, GroupLayout.PREFERRED_SIZE)
                                .addComponent(lblBieuDo))
                            .addComponent(jPanelChart, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED, 21, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, GroupLayout.PREFERRED_SIZE, 222, GroupLayout.PREFERRED_SIZE)
                        .addGap(67, 67, 67))
                    .addGroup(jPanelTKDTCaLayout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(jLabel5, GroupLayout.PREFERRED_SIZE, 49, GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblTimeHienThi, GroupLayout.PREFERRED_SIZE, 49, GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanelTKDTCaLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel3, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblCa2, GroupLayout.PREFERRED_SIZE, 36, GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanelTKDTCaLayout.createParallelGroup(GroupLayout.Alignment.TRAILING, false)
                            .addComponent(lblCa1, GroupLayout.PREFERRED_SIZE, 36, GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanelTKDTCaLayout.createSequentialGroup()
                                .addComponent(jPanel6, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                                .addGap(1, 1, 1)))
                        .addGap(18, 18, 18)
                        .addGroup(jPanelTKDTCaLayout.createParallelGroup(GroupLayout.Alignment.TRAILING)
                            .addComponent(lblCa3, GroupLayout.PREFERRED_SIZE, 36, GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPanel5, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        GroupLayout layout = new GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanelMenu, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanelTKDTCa, GroupLayout.PREFERRED_SIZE, 1525, GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addComponent(jPanelTKDTCa, GroupLayout.DEFAULT_SIZE, 988, Short.MAX_VALUE)
            .addComponent(jPanelMenu, GroupLayout.DEFAULT_SIZE, 988, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void BtnChartTronActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnChartTronActionPerformed
        // TODO add your handling code here:
        BtnChartTron.setBackground(new Color(0,131,66));
        hienThiKetQuaThongKe(danhSachThongKeCot);
        BtnChartCot.setBackground(new Color(204,255,204));
    }//GEN-LAST:event_BtnChartTronActionPerformed

    private void btnTimKiemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTimKiemActionPerformed
            List<ThongKeCa> danhSachThongKe = null; // Danh sách kết quả thống kê

        if (jradioKhoangTime.isSelected()) {
            // Lấy ngày bắt đầu và ngày kết thúc từ jDateChooser
            java.util.Date ngayBatDauUtil =  jDateChooserNBD.getDate();
            Date ngayBatDau = new Date(ngayBatDauUtil.getTime());
            java.util.Date ngayKetThucUtil =  jDateChooserNKT.getDate();
            Date ngayKetThuc = new Date(ngayKetThucUtil.getTime());

            // Kiểm tra ngày bắt đầu và kết thúc hợp lệ
            if (ngayBatDau == null || ngayKetThuc == null) {
                JOptionPane.showMessageDialog(null, "Vui lòng chọn ngày bắt đầu và ngày kết thúc.");
                return;
            }
                SimpleDateFormat dateFormat = new SimpleDateFormat("dd/MM/yyyy");  // Định dạng ngày
                String ngayBatDauString = dateFormat.format(ngayBatDau);
                String ngayKetThucString = dateFormat.format(ngayKetThuc);

// Cập nhật nhãn với ngày bắt đầu
            lblTimeHienThi.setText(ngayBatDauString + "-"+ ngayKetThucString);
            // Gọi phương thức tìm kiếm theo khoảng thời gian
            danhSachThongKe = dao_traCuuHD.getHoaDonByDateRange(ngayBatDau, ngayKetThuc);
          
        } else if (jRadioTime.isSelected()) {
            // Lấy tháng và năm từ jComboBoxTime và jSpinnerYear
            String thoiGian = (String) jComboBoxTime.getSelectedItem();
            int nam = (int) jSpinnerYear.getValue();

            if (thoiGian.equals("Hôm qua")) {
                // Gọi phương thức tìm kiếm cho hôm qua
                danhSachThongKe = dao_traCuuHD.getHoaDonForYesterday();
                lblTimeHienThi.setText("Hôm qua");
            } else if (thoiGian.equals("Hôm nay")) {
                // Gọi phương thức tìm kiếm cho hôm nay
                danhSachThongKe = dao_traCuuHD.getHoaDonForToday();
                lblTimeHienThi.setText("Hôm nay");
            } else {
                // Lấy tháng từ chuỗi "Tháng 1", "Tháng 2",...
                int thang = Integer.parseInt(thoiGian.replace("Tháng ", ""));
                lblTimeHienThi.setText(thoiGian+"-"+nam);
                // Gọi phương thức tìm kiếm theo tháng và năm
                danhSachThongKe = dao_traCuuHD.getHoaDonByMonthYear(thang, nam);
            }
        } else {
            JOptionPane.showMessageDialog(null, "Vui lòng chọn một tùy chọn tìm kiếm.");
            return;
        }

        // Hiển thị kết quả nếu danh sách không rỗng
        if (danhSachThongKe != null && !danhSachThongKe.isEmpty()) {
            // Xử lý hiển thị danh sách kết quả thống kê trên giao diện
            hienThiKetQuaThongKe(danhSachThongKe);
            danhSachThongKeCot= danhSachThongKe;
            
        } else {
            JOptionPane.showMessageDialog(null, "Không tìm thấy dữ liệu phù hợp.");
        }
    }//GEN-LAST:event_btnTimKiemActionPerformed

    private void BtnChartCotActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnChartCotActionPerformed
        // TODO add your handling code here:
        hienThiBieuDoCot(danhSachThongKeCot);
        BtnChartCot.setBackground(new Color(0,131,66));
        BtnChartTron.setBackground(new Color(204,255,204));
    }//GEN-LAST:event_BtnChartCotActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (UIManager.LookAndFeelInfo info : UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Frm_TKDTTheoCa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Frm_TKDTTheoCa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Frm_TKDTTheoCa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Frm_TKDTTheoCa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Frm_TKDTTheoCa().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public Component getJpanneTKDTCa() {
        return jPanelTKDTCa;
    }
    private JButton BtnChartCot;
    private JButton BtnChartTron;
    private JButton btnTimKiem;
    private ButtonGroup buttonGroup1;
    private JComboBox<String> jComboBoxTime;
    private com.toedter.calendar.JDateChooser jDateChooserNBD;
    private com.toedter.calendar.JDateChooser jDateChooserNKT;
    private JLabel jLabel1;
    private JLabel jLabel2;
    private JLabel jLabel4;
    private JLabel jLabel5;
    private JLabel jLabel9;
    private JPanel jPanel1;
    private JPanel jPanel2;
    private JPanel jPanel3;
    private JPanel jPanel5;
    private JPanel jPanel6;
    private JPanel jPanelChart;
    private JPanel jPanelMenu;
    private JPanel jPanelTKDTCa;
    private JRadioButton jRadioTime;
    private JScrollPane jScrollPane1;
    private JSpinner jSpinnerYear;
    private JRadioButton jradioKhoangTime;
    private JLabel lblBieuDo;
    private JLabel lblCa1;
    private JLabel lblCa2;
    private JLabel lblCa3;
    private JLabel lblDoanhThu1;
    private JLabel lblDoanhThu2;
    private JLabel lblDoanhThu3;
    private JLabel lblNBD;
    private JLabel lblThongKe;
    private JLabel lblTimeHienThi;
    private JLabel lblTongTienCa1;
    private JLabel lblTongTienCa2;
    private JLabel lblTongTienCa3;
    private JTable tableThongKe;
    // End of variables declaration//GEN-END:variables

    private void hienThiKetQuaThongKe(List<ThongKeCa> danhSachThongKe) {
        double tongDoanhThuCa1 = 0;
        double tongDoanhThuCa2 = 0;
        double tongDoanhThuCa3 = 0;
           // Ví dụ: Sử dụng JTable để hiển thị dữ liệu
    tableModel.setRowCount(0); // Xóa dữ liệu cũ
    DecimalFormat df = new DecimalFormat("#,###");
    for (ThongKeCa tk : danhSachThongKe) {
        tableModel.addRow(new Object[] {
            tk.getNgay(),
            tk.getCa(),
             df.format(tk.getDoanhThu()),
                   tk.getSoHoaDon(),
            tk.getSoVeBan()
      
        });
        
                    switch (tk.getCa()) {
        case "Ca 1 (6h-14h)":
            tongDoanhThuCa1 += tk.getDoanhThu();
            break;
        case "Ca 2 (14h-22h)":
            tongDoanhThuCa2 += tk.getDoanhThu();
            break;
        case "Ca 3 (22h-6h)":
            tongDoanhThuCa3 += tk.getDoanhThu();
            break;
    }
                    
    }
    // In tổng doanh thu
    lblTongTienCa1.setText(df.format(tongDoanhThuCa1));
    lblTongTienCa2.setText(df.format(tongDoanhThuCa2));
    lblTongTienCa3.setText(df.format(tongDoanhThuCa3));
    
        jPanelChart.setPreferredSize(new Dimension(500, 300)); // Chỉnh sửa kích thước của JPanel
        jPanelChart.setLayout(new BorderLayout());
        PieChart pieChart = new PieChart();
        pieChart.addData(new ModelPieChart("Doanh thu ca 1", tongDoanhThuCa1, Color.RED));
        pieChart.addData(new ModelPieChart("Doanh thu ca 2", tongDoanhThuCa2, Color.GREEN));
        pieChart.addData(new ModelPieChart("Doanh thu ca 3", tongDoanhThuCa3, Color.BLUE));
        jPanelChart.removeAll();
        jPanelChart.add(pieChart, BorderLayout.CENTER); 
        // Cập nhật giao diện
        jPanelChart.revalidate(); // Đảm bảo rằng giao diện được cập nhật lại
        jPanelChart.repaint();
    }
    
   private void hienThiBieuDoCot(List<ThongKeCa> danhSachThongKe) {
    // Tạo biểu đồ cột
    Chart1 chart = new Chart1();

    // Thêm legend cho các ca làm việc
    chart.addLegend("Ca 1", Color.RED);
    chart.addLegend("Ca 2", Color.GREEN);
    chart.addLegend("Ca 3", Color.BLUE);

    // Định dạng ngày
    SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");

    // Sử dụng Map để nhóm doanh thu theo ngày
    Map<String, double[]> doanhThuTheoNgay = new LinkedHashMap<>();

    for (ThongKeCa tk : danhSachThongKe) {
        String ngay = dateFormat.format(tk.getNgay());
        doanhThuTheoNgay.putIfAbsent(ngay, new double[3]);
        switch (tk.getCa()) {
            case "Ca 1 (6h-14h)":
                doanhThuTheoNgay.get(ngay)[0] += tk.getDoanhThu();
                break;
            case "Ca 2 (14h-22h)":
                doanhThuTheoNgay.get(ngay)[1] += tk.getDoanhThu();
                break;
            case "Ca 3 (22h-6h)":
                doanhThuTheoNgay.get(ngay)[2] += tk.getDoanhThu();
                break;
        }
    }

    // Debug dữ liệu trong Map
    for (Map.Entry<String, double[]> entry : doanhThuTheoNgay.entrySet()) {
        //System.out.println(entry.getKey() + ": " + Arrays.toString(entry.getValue()));
    }

    // Thêm dữ liệu vào biểu đồ
    for (Map.Entry<String, double[]> entry : doanhThuTheoNgay.entrySet()) {
        double[] doanhThu = doanhThuTheoNgay.getOrDefault(entry.getKey(), new double[]{0, 0, 0});
        chart.addData(new ModelChart(entry.getKey(), doanhThu));
    }

    // Hiển thị biểu đồ trên JPanel
    jPanelChart.removeAll(); // Xóa các thành phần hiện tại
    jPanelChart.setLayout(new BorderLayout());
    jPanelChart.add(chart, BorderLayout.CENTER); // Thêm biểu đồ cột vào JPanel
    jPanelChart.revalidate(); // Cập nhật giao diện
    jPanelChart.repaint();
}



}
